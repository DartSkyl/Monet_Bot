import time
from asyncio import sleep
from loader import bot, channels_dict, subscription_dict, db
from utils import admin_router, SubManag
from states import SubscriptionManagement as SM
from kyeboards import cancel_button, main_admin_keyboard, sub_manag, del_board, SubDel, add_sub_keyboard, AddSubForUser
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.exceptions import TelegramBadRequest
from aiogram import F


@admin_router.message(F.text == '2')
async def test2(msg):
    a = await db.get_user_from_channel(user_id=693157146, channel_id=-1001972569166)
    print(a[0])


@admin_router.message(F.text == '‚öôÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å/—É–¥–∞–ª–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏')
async def check_sub_settings(msg: Message) -> None:
    """–•—ç–Ω–¥–ª–µ—Ä –≤—ã–≤–æ–¥–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ–¥–ø–∏—Å–∫–∞–º"""
    tr_sub = await SubManag.get_trail_period()
    ans_text = (f'–ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: {tr_sub} –¥–Ω—è(–¥–Ω–µ–π)' if tr_sub > 0
                else '–ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞')
    for period, cost in sorted(subscription_dict.items()):
        if period != '0':  # –¢–∞–∫ –∫–∞–∫ –ø–æ–¥ —ç—Ç–∏–º –∫–ª—é—á–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
            ans_text += f'\n{period} –¥–Ω–µ–π, —Å—Ç–æ–∏–º–æ—Å—Ç—å {str(cost)}'
    if len(subscription_dict) == 1:  # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ—Ç, –∞ –≤ —Å–ª–æ–≤–∞—Ä–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
        ans_text += '\n–ü–ª–∞—Ç–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ—Ç!'
    await msg.answer(text=ans_text,
                     reply_markup=del_board())


@admin_router.message(F.text == 'üíµ –î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É')
async def set_paid_subscription(msg: Message, state: FSMContext) -> None:
    m_text = ('–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n'
              '–ü—Ä–∏–º–µ—Ä: –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 30 –¥–Ω–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 100 —Ä—É–±–ª–µ–π - "30 100" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫')
    await msg.answer(text=m_text, reply_markup=cancel_button)
    await state.set_state(SM.set_paid_sub)


@admin_router.message(F.text == '‚è≤Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏')
async def set_trail_subscription(msg: Message, state: FSMContext) -> None:
    """–•—ç–Ω–¥–ª–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏"""
    await state.set_state(SM.set_trail_sub)
    await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏\n"
                          "–ß—Ç–æ –±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –≤–≤–µ–¥–∏—Ç–µ 0", reply_markup=cancel_button)


@admin_router.message(F.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
async def add_sub_user(msg: Message, state: FSMContext) -> None:
    """–•—ç–Ω–¥–ª–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Ä—É—á–Ω—É—é"""
    await state.set_state(SM.add_subscription_a_user)
    await msg.answer(text='–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å—é–¥–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:',
                     reply_markup=cancel_button)


@admin_router.message(SM.add_subscription_a_user, F.forward_from.as_('reply') | F.text.regexp(r'\d{8,}$'))
async def add_subscription_1(msg: Message, state: FSMContext, reply=None):
    if reply:
        await state.set_data({'uid': reply.id})
    else:
        await state.set_data({'uid': msg.text})
    chnl_markup = await add_sub_keyboard()
    await msg.answer(text='–í—ã–±–µ—Ä–µ—Ç–µ –Ω–∞ –∫–∞–∫–æ–π –∫–∞–Ω–∞–ª —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É:', reply_markup=chnl_markup)


@admin_router.callback_query(AddSubForUser.filter(), SM.add_subscription_a_user)
async def add_sub_user(callback: CallbackQuery, callback_data: AddSubForUser, state: FSMContext) -> None:
    await state.update_data({'ch_id': callback_data.chl_id})
    await state.update_data({'ch_name': callback_data.chl_name})
    await callback.message.answer(text='–í–≤–µ–¥–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –¥–æ–±–∞–≤–∏—Ç—å –∫ –ø–æ–¥–ø–∏—Å–∫–µ:', reply_markup=cancel_button)


@admin_router.message(SM.add_subscription_a_user, F.text.regexp(r'\d{1,5}$'))
async def add_subscription_2(msg: Message, state: FSMContext):
    sub_info = await state.get_data()
    print(sub_info)
    await SubManag.add_user_paid_sub(
        user_id=sub_info['uid'],
        channel_id=sub_info['ch_id'],
        period=int(msg.text)
    )
    ans_text = (f'–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {sub_info["uid"]} –Ω–∞ –∫–∞–Ω–∞–ª {sub_info["ch_name"]} '
                f'—Å—Ä–æ–∫–æ–º –Ω–∞ {msg.text} –¥–Ω—è(–¥–Ω–µ–π) –¥–æ–±–∞–≤–ª–µ–Ω–∞')
    await state.clear()
    await msg.answer(text=ans_text, reply_markup=sub_manag)


@admin_router.message(SM.set_paid_sub, F.text.regexp(r'\d{1,}\s\d{1,}$'))
async def set_paid_sub(msg: Message, state: FSMContext) -> None:
    sub_set = msg.text.split()
    if int(sub_set[0]) > 0:
        await SubManag.set_paid_subscription(sub_set[0], int(sub_set[1]))
        ans_text = f'–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ {sub_set[0]} –¥–Ω–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é {sub_set[1]} –¥–æ–±–∞–≤–ª–µ–Ω–∞!'
        await msg.answer(text=ans_text, reply_markup=sub_manag)
        await state.clear()
    else:
        await msg.answer(text='–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 0 –¥–Ω–µ–π? –î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑ –ø–æ–ø—Ä–æ–±—É–µ–º!', reply_markup=cancel_button)


@admin_router.message(SM.set_trail_sub, F.text.regexp(r'\d{1,}'))
async def set_trail_subscription_period(msg: Message, state: FSMContext) -> None:
    """–í —Ö—ç–Ω–¥–ª–µ—Ä–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏"""
    await SubManag.trail_sub_period(int(msg.text))
    await msg.answer(text=f'–ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {msg.text} –¥–Ω–µ–π' if int(msg.text) > 0
                          else '–ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞',
                     reply_markup=sub_manag)
    await state.clear()


@admin_router.callback_query(SubDel.filter())
async def sub_delete(callback: CallbackQuery, callback_data: SubDel) -> None:
    await SubManag.delete_subscription(callback_data.sub_info)
    await callback.answer(text=f'–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ {callback_data.sub_info} –¥–Ω–µ–π —É–¥–∞–ª–µ–Ω–∞')
    tr_sub = await SubManag.get_trail_period()
    ans_text = (f'–ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: {tr_sub} –¥–Ω—è(–¥–Ω–µ–π)' if tr_sub > 0
                else '–ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞')
    for period, cost in sorted(subscription_dict.items()):
        if period != '0':  # –¢–∞–∫ –∫–∞–∫ –ø–æ–¥ —ç—Ç–∏–º –∫–ª—é—á–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
            ans_text += f'\n{period} –¥–Ω–µ–π, —Å—Ç–æ–∏–º–æ—Å—Ç—å {str(cost)}'
    await callback.message.edit_text(text=ans_text)
    try:
        await callback.message.edit_reply_markup(reply_markup=del_board())
    except TelegramBadRequest as exc:  # –í—ã—Å–∫–æ—á–∏—Ç, –µ—Å–ª–∏ –Ω–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        await callback.message.edit_text(text=ans_text + '\n–ü–ª–∞—Ç–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ—Ç!')
        print('–ù–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã!\n', exc)


@admin_router.message(SM.set_trail_sub)
async def error_input_trail_sub(msg: Message) -> None:
    await msg.answer(text='–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!\n–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º', reply_markup=cancel_button)


@admin_router.message(SM.add_subscription_a_user)
async def error_input_add_sub(msg: Message) -> None:
    await msg.answer(text='–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!\n–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º', reply_markup=cancel_button)


@admin_router.message(SM.set_paid_sub)
async def error_input_paid_sub(msg: Message) -> None:
    await msg.answer(text='–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!\n'
                     '–ü—Ä–∏–º–µ—Ä: –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 30 –¥–Ω–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 100 —Ä—É–±–ª–µ–π - '
                     '"30 100" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏',
                     reply_markup=cancel_button)

# @admin_router.message(Command("ban"))
# async  def handing_message(msg):
#     await bot.ban_chat_member(chat_id=-1001513097504, user_id=6724839493)
#
#
# @admin_router.message(Command("unban"))
# async  def handing_message(msg):
#     await bot.unban_chat_member(chat_id=-1001513097504, user_id=6724839493)
