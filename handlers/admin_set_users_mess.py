from loader import users_mess_dict, db
from utils import admin_router
from states import UsersMessages
from keyboards import (redactor_for_message, users_system_messages,
                       cancel_button, main_admin_keyboard, users_msg_markup, QueueSelection,
                       channels_messages_markup)

from aiogram import F, html
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext


@admin_router.message(F.text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π')
async def start_set_users_mess(msg: Message):
    """–ó–¥–µ—Å—å —Å—Ç–∞—Ä—Ç—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await msg.answer(text='–í—ã–±–µ—Ä–µ—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=users_msg_markup)


@admin_router.message(F.text == 'üìÑ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è')
async def system_messages(msg: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await state.set_state(UsersMessages.set_system_mess)
    await msg.answer(text='–í—ã–±–µ—Ä–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', reply_markup=await users_system_messages())


@admin_router.message(F.text == 'üìù –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤')
async def channels_messages(msg: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤"""
    await state.set_state(UsersMessages.set_channel_mess)
    await msg.answer(text='–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –±—É–¥–µ–º –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å?', reply_markup=await channels_messages_markup())


@admin_router.callback_query(UsersMessages.set_system_mess, F.data == 'go_back')
async def back_to_system_messages(callback: CallbackQuery):
    """–ó–¥–µ—Å—å –≤–æ–∑–≤—Ä–∞—Ç –∫ —Å–∏—Å—Ç–µ–º–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º"""
    await callback.message.delete()
    await callback.message.answer(text='–í—ã–±–µ—Ä–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', reply_markup=await users_system_messages())


@admin_router.callback_query(UsersMessages.set_channel_mess, F.data == 'go_back')
async def back_to_channels_messages(callback: CallbackQuery):
    """–ó–¥–µ—Å—å –≤–æ–∑–≤—Ä–∞—Ç –∫ –æ–ø–∏—Å–∞–Ω–∏—è–º –∫–∞–Ω–∞–ª–æ–≤"""
    await callback.message.delete()
    await callback.message.answer(text='–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –±—É–¥–µ–º –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å?',
                                  reply_markup=await channels_messages_markup())


@admin_router.callback_query(UsersMessages.set_system_mess, F.data == 'edit')
async def edit_users_message(callback: CallbackQuery, state: FSMContext):
    """–ó–¥–µ—Å—å –º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    await callback.answer()
    await state.set_state(UsersMessages.edit_mess)
    await callback.message.answer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:', reply_markup=cancel_button)


@admin_router.callback_query(UsersMessages.set_channel_mess, F.data == 'edit')
async def edit_users_message(callback: CallbackQuery, state: FSMContext):
    """–ó–¥–µ—Å—å –º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
    await callback.answer()
    await state.set_state(UsersMessages.edit_channel_mess)
    await callback.message.answer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:', reply_markup=cancel_button)


@admin_router.callback_query(UsersMessages.set_channel_mess, QueueSelection.filter())
async def get_channels_mess(callback: CallbackQuery, callback_data: QueueSelection, state: FSMContext):
    """–ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–≤–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
    await callback.message.delete()
    await state.set_data({'message': str(callback_data.chnl_id)})  # –°—Ä–∞–∑—É —Å–æ—Ö—Ä–∞–Ω–∏–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    msg_text = f'–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞: <b>{html.quote(callback_data.chnl_name)}</b>\n'
    msg_text += '<i>–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</i>' if not users_mess_dict.get(str(callback_data.chnl_id))\
        else users_mess_dict[str(callback_data.chnl_id)]  # –ï—Å–ª–∏ —É –∫–ª—é—á–∞ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –µ–≥–æ –∏ –≤—Å—Ç–∞–≤–∏–º

    await callback.message.answer(text=msg_text, reply_markup=await redactor_for_message())


@admin_router.callback_query(UsersMessages.set_system_mess, F.data.in_(
    ['hi_mess', 'paid', 'trail_sub', 'not_trail', 'was_trail', 'sub_end', 'sub_stop']
))
async def get_users_mess(callback: CallbackQuery, state: FSMContext):
    """–ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–≤–æ–¥ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    dict_for_msg = {
        'hi_mess': '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
        'paid': '–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã',
        'trail_sub': '–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏',
        'not_trail': '–°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç',
        'was_trail': '–°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —É–∂–µ –≤—ã–¥–∞–≤–∞–ª–∞—Å—å',
        'sub_end': '–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏–π—Å—è –ø–æ–¥–ø–∏—Å–∫–∏',
        'sub_stop': '–°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å',
    }
    await callback.message.delete()
    await state.set_data({'message': callback.data})  # –°—Ä–∞–∑—É —Å–æ—Ö—Ä–∞–Ω–∏–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    msg_text = f'<b>{dict_for_msg[callback.data]}:</b>\n{users_mess_dict[callback.data]}'
    await callback.message.answer(text=msg_text, reply_markup=await redactor_for_message())


@admin_router.message(UsersMessages.edit_channel_mess)
async def set_message(msg: Message, state: FSMContext):
    """–ó–¥–µ—Å—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
    edit_mess = (await state.get_data())['message']  # –ë–µ—Ä–µ–º –∑–∞—Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∫–ª—é—á –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    users_mess_dict[edit_mess] = msg.text  # –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –ø–æ–¥ –∫–ª—é—á–æ–º –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Å–≤–æ–µ–≥–æ ID
    await db.set_users_messages(mess_for=edit_mess, mess_text=msg.text)
    await msg.answer(text='–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ',reply_markup=main_admin_keyboard)
    await state.clear()


@admin_router.message(UsersMessages.edit_mess)
async def set_message(msg: Message, state: FSMContext):
    """–ó–¥–µ—Å—å –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è"""
    edit_mess = (await state.get_data())['message']  # –ë–µ—Ä–µ–º –∑–∞—Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∫–ª—é—á –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    users_mess_dict[edit_mess] = msg.text
    await db.set_users_messages(mess_for=edit_mess, mess_text=msg.text)
    await msg.answer(text='–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ',reply_markup=main_admin_keyboard)
    await state.clear()


@admin_router.message(F.text == 'üì© –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤')
async def set_contact(msg: Message, state: FSMContext):
    """–ó–¥–µ—Å—å –∑–∞–¥–∞–µ–º —Å—Ç—ç–π—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"""
    await state.set_state(UsersMessages.set_admin_contact)
    await msg.answer(text='–í–≤–µ–¥–∏—Ç–µ @UserName –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', reply_markup=cancel_button)


@admin_router.message(UsersMessages.set_admin_contact, F.text.regexp(r'@\w{5,32}'))
async def get_admin_username(msg: Message, state: FSMContext):
    """–ó–¥–µ—Å—å –ª–æ–≤–∏–º —é–∑–µ—Ä–Ω—ç–π–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    await db.set_users_messages(mess_for='admin_username', mess_text=msg.text)
    users_mess_dict['admin_username'] = msg.text
    await msg.answer(text='–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω', reply_markup=users_msg_markup)
    await state.clear()


@admin_router.message(UsersMessages.set_admin_contact)
async def error_input_username(msg: Message):
    """–°–æ–æ–±—â–∞–µ–º –æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞"""
    await msg.answer(text='–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!')


@admin_router.callback_query(UsersMessages.set_system_mess, F.data == 'cancel')
async def cancel_set_mess(callback: CallbackQuery, state: FSMContext):
    """–ó–¥–µ—Å—å –æ—Ç–º–µ–Ω–∞"""
    await state.clear()
    await callback.message.delete()
    await callback.message.answer(text='–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=main_admin_keyboard)


@admin_router.callback_query(UsersMessages.set_channel_mess, F.data == 'cancel')
async def cancel_set_mess(callback: CallbackQuery, state: FSMContext):
    """–ó–¥–µ—Å—å –æ—Ç–º–µ–Ω–∞"""
    await state.clear()
    await callback.message.delete()
    await callback.message.answer(text='–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=main_admin_keyboard)
