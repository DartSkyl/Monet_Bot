import asyncio
import re
from loader import bot
from utils import admin_router, dict_queue
from states import AddingPost
from keyboards import (cancel_button, auto_posting,
                       queue_selection_keyboard, QueueSelection,
                       only_file, only_text)

from aiogram import F, html
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext


@admin_router.message(F.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ –æ—á–µ—Ä–µ–¥—å')
async def start_adding_publication(msg: Message, state: FSMContext):
    """–ó–¥–µ—Å—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥—å –ø—É–±–ª–∏–∫–∞—Ü–∏–π"""
    msg_text = '–í—ã–±–µ—Ä–µ—Ç–µ –æ—á–µ—Ä–µ–¥—å –ø—É–±–ª–∏–∫–∞—Ü–∏–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π:'
    await msg.answer(text=msg_text, reply_markup=await queue_selection_keyboard())
    await state.set_state(AddingPost.step_one)


@admin_router.callback_query(QueueSelection.filter(), AddingPost.step_one)
async def adding_publication_choice_type(callback: CallbackQuery, callback_data: QueueSelection, state: FSMContext):
    """–ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ–±–∞–≤–ª—è–µ–º–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    await callback.answer()
    channel_name = (await bot.get_chat(callback_data.chnl_id)).title
    msg_text = (f'–í—ã–±—Ä–∞–Ω–∞ –æ—á–µ—Ä–µ–¥—å –ø—É–±–ª–∏–∫–∞—Ü–∏–π <i><b>{html.quote(channel_name)}</b></i>\n'
                f'–ü—É–±–ª–∏–∫–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç—Ä–µ—Ö –≤–∏–¥–æ–≤:\n'
                f'- —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç (3000 —Å–∏–º–≤–æ–ª–æ–≤)\n'
                f'- —Ç–µ–∫—Å—Ç (1024 —Å–∏–º–≤–æ–ª–∞) + —Ñ–∞–π–ª(—ã)(–¥–æ 10 —Ñ–∞–π–ª–æ–≤)\n'
                f'- —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª(—ã)(–¥–æ 10 —Ñ–∞–π–ª–æ–≤)\n\n'
                f'–°–∫–∏–Ω—å—Ç–µ —Ñ–∞–π–ª(—ã) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª—å—à–µ</b>')
    await callback.message.answer(text=msg_text, reply_markup=only_text)
    await state.set_data({'channel_id': callback_data.chnl_id, 'channel_name': channel_name, 'mediafile': []})
    await state.set_state(AddingPost.step_adding_file)


@admin_router.message(AddingPost.step_adding_file, F.text != '–î–∞–ª—å—à–µ')
async def adding_files(msg: Message, state: FSMContext):
    """–ó–¥–µ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª(—ã) –≤ –±—É–¥—É—â—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é"""

    # –¢–∞–∫ –∫–∞–∫, –ø—Ä–∏ —Å–∫–∏–¥—ã–≤–∞–Ω–∏–∏ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞, –±–æ—Ç –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç —ç—Ç–æ —Å—Ä–∞–∑—É –∫–∞–∫ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö
    # —Å–æ–æ–±—â–µ–Ω–∏–π, —Ç–æ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –ø—Ä–∏—á—É–¥–ª–∏–≤—É—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Å –∑–∞—Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º

    file_id_list = (await state.get_data())['mediafile']

    if msg.photo:
        file_id_list.append((msg.photo[-1].file_id, 'photo'))
    elif msg.video:
        file_id_list.append((msg.video.file_id, 'video'))
    elif msg.document:
        file_id_list.append((msg.document.file_id, 'document'))
    elif msg.video_note:
        file_id_list.append((msg.video_note.file_id, 'video_note'))

    await state.update_data({'mediafile': file_id_list})


@admin_router.message(AddingPost.step_adding_file, F.text == '–î–∞–ª—å—à–µ')
async def check_file(msg: Message, state: FSMContext):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–∫–∏–Ω—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –ï—Å–ª–∏ –≤—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, —Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç"""
    file_id_list = (await state.get_data())['mediafile']

    # –ï—Å–ª–∏ —Ñ–∞–π–ª–æ–≤ –±–æ–ª—å—à–µ —á–µ–º –Ω–∞–¥–æ, —Ç–æ –ø—Ä–æ—Å–∏–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
    if 0 < len(file_id_list) <= 10:
        type_set = {t[1] for t in file_id_list}

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ–¥–Ω–æ—Ç–∏–ø–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤. –í–ø–µ—Ä–µ–º–µ—à–∫—É –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ(–Ω–µ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ)

        if len(type_set) == 1:  # –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —É –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –æ–¥–∏–Ω —Ç–∏–ø
            await msg.answer(text='–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø—É –ì–æ—Ç–æ–≤–æ:', reply_markup=only_file)
            await state.set_state(AddingPost.step_adding_text)
            await state.update_data({'only_text': False})
        elif len(type_set) == 2 and ('photo' and 'video' in type_set):
            await msg.answer(text='–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø—É –ì–æ—Ç–æ–≤–æ:', reply_markup=only_file)
            await state.set_state(AddingPost.step_adding_text)
            await state.update_data({'only_text': False})
        else:
            await msg.answer(text='–§–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã–º–∏! –°–æ–≤–º–µ—Å—Ç–Ω–æ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ!',
                             reply_markup=only_text)
            await state.update_data({'mediafile': []})

    elif len(file_id_list) == 0:  # –ó–Ω–∞—á–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        await state.set_state(AddingPost.step_adding_text)
        await msg.answer(text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç', reply_markup=cancel_button)
        await state.update_data({'only_text': True})

    else:
        await msg.answer(text='–§–∞–ª–æ–≤ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É', reply_markup=only_text)
        await state.update_data({'mediafile': []})


@admin_router.message(AddingPost.step_adding_text, F.text != 'üö´ –û—Ç–º–µ–Ω–∞')
async def adding_publication_get_text(msg: Message, state: FSMContext):
    """–ó–¥–µ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –±—É–¥—É—â–µ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    if '<' in msg.text:
        await msg.answer(text=html.quote('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ "<" –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ–ª—å–∑—è, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–∞—Ä—É—à–∏—Ç —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞!'))
    else:

        post_info = await state.get_data()
        channel_queue_id = post_info['channel_id']
        channel_queue_name = post_info['channel_name']
        msg_text = f'–ü—É–±–ª–∏–∫–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å <i><b>{html.quote(channel_queue_name)}</b></i>'
        enti = msg.entities  # –î–ª—è —Å—Å—ã–ª–æ–∫ –≤–Ω—É—Ç—Ä–∏ —Ç–µ–∫—Å—Ç–∞
        text_for_post = msg.text
        try:
            for elem in enti:
                if elem.type == 'text_link':
                    reg = r'[^#]{0}'.format(elem.extract_from(msg.text))
                    sub_str = f'<a href = "{elem.url}">{elem.extract_from(msg.text)}</a>'
                    text_for_post = re.sub(reg, sub_str, text_for_post)
        except TypeError:
            pass

        if post_info['only_text']:
            if len(msg.text) <= 3000:

                await dict_queue[channel_queue_id].adding_publication_in_queue(text=text_for_post)
                await msg.answer(text=msg_text, reply_markup=auto_posting)
                await state.clear()
            else:
                await state.set_state(AddingPost.false_state)  # –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –∫–æ–≥–¥–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º —Ä–∞–∑–æ–±—å–µ—Ç
                # —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤—Ç–æ—Ä–æ–µ

                await msg.answer(text=f'–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è 3000 —Å–∏–º–≤–æ–ª–æ–≤ '
                                      f'(–í—ã –≤–≤–µ–ª–∏ {len(msg.text)} —Å–∏–º–≤–æ–ª–∞)',
                                 reply_markup=only_file)

                await asyncio.sleep(1)
                await state.set_state(AddingPost.step_adding_text)  # –ò —Å—Ä–∞–∑—É —É—Å—Ç–∞–Ω–æ–≤–∏–º —Å—Ç—ç–π—Ç –æ–±—Ä–∞—Ç–Ω–æ,
                # —á—Ç–æ –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        else:
            if len(msg.text) <= 1024:
                # file_id_list = [i[0] for i in post_info['mediafile']]
                await dict_queue[channel_queue_id].adding_publication_in_queue(
                    text=(text_for_post if msg.text != '–ì–æ—Ç–æ–≤–æ' else None),
                    file_id=post_info['mediafile']
                )
                await msg.answer(text=msg_text, reply_markup=auto_posting)
                await state.clear()

            else:
                await msg.answer(text=f'–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∞–π–ª–∞(–æ–≤) 1024 —Å–∏–º–≤–æ–ª–∞ '
                                      f'(–í—ã –≤–≤–µ–ª–∏ {len(msg.text)} —Å–∏–º–≤–æ–ª–∞)',
                                 reply_markup=only_file)
